#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🔍 Running pre-commit checks..."

# Function to display step status
step_status() {
  if [ $? -eq 0 ]; then
    echo "✅ $1 passed"
  else
    echo "❌ $1 failed"
    echo "💡 $2"
    exit 1
  fi
}

# Check for staged files
STAGED_FILES=$(git diff --cached --name-only)
if [ -z "$STAGED_FILES" ]; then
  echo "No files staged for commit. Skipping checks."
  exit 0
fi

# Python code quality checks
echo "🐍 Checking Python files..."
git diff --cached --name-only | grep -E '\.py$' | while read file; do
  if [ -f "$file" ]; then
    echo "Checking $file"
    black --check "$file"
    step_status "Black formatting" "Run 'npx prettier --write $file' to fix formatting issues"
    
    flake8 "$file"
    step_status "Flake8 linting" "Fix the Python style issues reported by flake8"
  fi
done

# TypeScript/JavaScript code quality checks
echo "🎨 Running code quality checks..."

# Prettier formatting
echo "Running Prettier..."
npx pretty-quick --staged
step_status "Prettier formatting" "Run 'npx prettier --write .' to fix formatting issues"

# ESLint
echo "Running code quality checks..."
npx tsx scripts/code_review.ts
step_status "Code quality checks" "Review and address the issues reported by the code review tool"

echo "Running ESLint..."
git diff --cached --name-only | grep -E '\.(ts|tsx|js|jsx)$' | xargs npx eslint --fix
step_status "ESLint" "Fix the linting issues reported by ESLint"

# Type checking
echo "📝 Running TypeScript type checking..."
npm run check
step_status "Type checking" "Fix type errors before committing"

# Run tests for changed files
echo "🧪 Running tests for changed files..."
CHANGED_FILES=$(git diff --cached --name-only | grep -E '\.(ts|tsx|js|jsx)$' || true)
if [ -n "$CHANGED_FILES" ]; then
  npx jest --findRelatedTests --passWithNoTests --bail --silent $CHANGED_FILES
  step_status "Tests" "Ensure all tests pass for the changed files"
else
  echo "No TypeScript/JavaScript files changed. Skipping tests."
fi

# Medical education platform specific checks
echo "🏥 Running domain-specific checks..."

# Check for accessibility issues in React components
git diff --cached --name-only | grep -E '\.(tsx|jsx)$' | while read file; do
  if [ -f "$file" ]; then
    echo "Checking accessibility in $file"
    npx eslint --config .eslintrc.json --rule 'jsx-a11y/*: error' "$file"
    step_status "Accessibility checks" "Fix accessibility issues to ensure inclusive user experience"
  fi
done

# Success message with helpful information
echo "
✨ All pre-commit checks passed! 
   Your code meets our quality standards.

🏥 Medical Platform Guidelines:
   - Ensure HIPAA compliance in comments and docs
   - Follow medical terminology conventions
   - Keep accessibility a top priority

💡 Best Practices:
   - Write clear test cases
   - Update documentation
   - Keep commits focused and small
"
