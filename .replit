modules = ["nodejs-20", "postgresql-16", "python-3.11", "web"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[env]
ENABLE_CJS_IMPORTS = "true"

[nix]
channel = "stable-22_11"

[languages.javascript]
pattern = "**/{*.js,*.jsx,*.ts,*.tsx}"
syntax = "javascript"

[languages.javascript.languageServer]
start = [ "typescript-language-server", "--stdio" ]

[formatters.prettier]
pattern = "**/{*.js,*.jsx,*.ts,*.tsx,*.json,*.css,*.scss,*.md}"
command = ["npx", "prettier", "--write"]

[deployment]
deploymentTarget = "cloudrun"
build = ["npm", "run", "build"]
run = ["npm", "run", "start"]

[[ports]]
localPort = 3000
externalPort = 3000

[[ports]]
localPort = 3001
externalPort = 80

[[ports]]
localPort = 3002
externalPort = 3002

[[ports]]
localPort = 3003
externalPort = 3003

[[ports]]
localPort = 5000
externalPort = 5000

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Code Review"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Test ContentParsing"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Code Review"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx scripts/code_review.ts"

[[workflows.workflow]]
name = "Test ContentParsing"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = """
python3 -c \"
import asyncio
from services.ContentParsingService import ContentParsingService

async def test_parsing():
    service = ContentParsingService()
    content = await service.parse_file('test_medical_content.txt')
    analysis = await service.analyze_content(content)
    print('Content parsed and analyzed successfully')
    print(f'Found {len(analysis.learning_objectives)} learning objectives')

asyncio.run(test_parsing())
\""""
